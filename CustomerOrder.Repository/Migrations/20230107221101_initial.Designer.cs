// <auto-generated />
using System;
using CustomerOrder.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CustomerOrder.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230107221101_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CustomerOrder.Core.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Customers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "London BT34FT",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Elise",
                            LastName = "Rick"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Milton Keynes MK34FT",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Jon",
                            LastName = "Bon"
                        },
                        new
                        {
                            Id = 3,
                            Address = "London SW34FT",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Andrea",
                            LastName = "Bon"
                        });
                });

            modelBuilder.Entity("CustomerOrder.Core.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 1, 7, 22, 11, 1, 179, DateTimeKind.Local).AddTicks(5641),
                            CustomerId = 1,
                            OrderDate = new DateTime(2023, 1, 7, 22, 11, 1, 179, DateTimeKind.Local).AddTicks(5612),
                            OrderNumber = 1254
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 1, 7, 22, 11, 1, 179, DateTimeKind.Local).AddTicks(5644),
                            CustomerId = 1,
                            OrderDate = new DateTime(2023, 1, 7, 22, 11, 1, 179, DateTimeKind.Local).AddTicks(5643),
                            OrderNumber = 845
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 1, 7, 22, 11, 1, 179, DateTimeKind.Local).AddTicks(5647),
                            CustomerId = 2,
                            OrderDate = new DateTime(2023, 1, 7, 22, 11, 1, 179, DateTimeKind.Local).AddTicks(5646),
                            OrderNumber = 365
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 1, 7, 22, 11, 1, 179, DateTimeKind.Local).AddTicks(5649),
                            CustomerId = 1,
                            OrderDate = new DateTime(2023, 1, 7, 22, 11, 1, 179, DateTimeKind.Local).AddTicks(5648),
                            OrderNumber = 254
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 1, 7, 22, 11, 1, 179, DateTimeKind.Local).AddTicks(5651),
                            CustomerId = 2,
                            OrderDate = new DateTime(2023, 1, 7, 22, 11, 1, 179, DateTimeKind.Local).AddTicks(5650),
                            OrderNumber = 124
                        });
                });

            modelBuilder.Entity("CustomerOrder.Core.Models.Order", b =>
                {
                    b.HasOne("CustomerOrder.Core.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CustomerOrder.Core.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
